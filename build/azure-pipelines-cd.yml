trigger:
  batch: true
  tags:
    include:
      - 'v*'
  paths:
    include:
      - build
      - MangoAPI.Application
      - MangoAPI.BusinessLogic
      - MangoAPI.Client
      - MangoAPI.DiffieHellmanConsole
      - MangoAPI.DiffieHellmanLibrary
      - MangoAPI.Domain
      - MangoAPI.IntegrationTests
      - MangoAPI.Presentation

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  - name: artifactPath
    value: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/MangoAPI.Presentation.zip'

stages:
  - stage: 'Build_Test_Pack'
    displayName: 'Build Test and Drop Artifacts'
    jobs:
      - template: templates/dotnet-build-job-template.yml
      - template: templates/dotnet-integration-tests-job-template.yml

  - stage: 'Security_checks'
    displayName: 'Run security checks'
    dependsOn: 'Build_Test_Pack'
    condition: succeeded('Build_Test_Pack')
    jobs:
      - template: templates/sonarcloud-job-template.yml
      - template: templates/mend-scan-job-template.yml
      - template: templates/snyk-job-template.yml

  - stage: 'dev'
    displayName: 'Deploy Mango Messenger to DEV Environment'
    dependsOn: 'Security_checks'
    condition: succeeded('Security_checks')
    jobs:
      - deployment: 'Deploy_Mango_Web_API_to_Dev'
        displayName: 'Deploy Mango Messenger to DEV Environment'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'dev'
        variables:
          - group: DEPLOY_DEV_VARS #contains keyvault name and webapp name
          - name: 'ApplicationInsights.InstrumentationKey'
            value: '$(ApplicationInsightsInstrumentationKey)'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - task: Bash@3
                  displayName: 'Unzip artifact'
                  inputs:
                    targetType: 'inline'
                    workingDirectory: '$(Pipeline.Workspace)/drop/$(buildConfiguration)'
                    script: |
                      unzip MangoAPI.Presentation.zip -d /MangoAPI.Presentation
                      
                - task: replacetokens@5
                  displayName: 'Transform base URL'
                  inputs:
                    targetFiles: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/MangoAPI.Presentation/wwwroot/assets/config/config.json'
                    encoding: 'auto'
                    tokenPattern: 'default'
                    writeBOM: true
                    actionOnMissing: 'warn'
                    keepToken: false
                    actionOnNoFiles: 'continue'
                    enableTransforms: false
                    enableRecursion: false
                    useLegacyPattern: false
                    enableTelemetry: true
                    
                    #zip -r MyDocsFolder.zip MyDocsFolder
                - task: Bash@3
                  displayName: 'Zip artifact'
                  inputs:
                    targetType: 'inline'
                    workingDirectory: '$(Pipeline.Workspace)/drop/$(buildConfiguration)'
                    script: |
                      zip -r MangoAPI.Presentation.zip  /MangoAPI.Presentation

                - task: AzureKeyVault@2
                  inputs:
                    azureSubscription: 'MangoServiceConnection'
                    KeyVaultName: '$(KeyVaultName)'
                    SecretsFilter: "*"
                    RunAsPreJob: false

                - task: AzureRmWebAppDeployment@4
                  displayName: 'Deploy to Azure Web App'
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'MangoServiceConnection'
                    appType: 'webApp'
                    WebAppName: '$(WebAppName)'
                    packageForLinux: '$(artifactPath)'
                    JSONFiles: '**/appsettings.json'