steps:
  - task: gitversion/setup@0
    displayName: 'GitVersion Setup'
    inputs:
      versionSpec: '5.8.x'

  - task: gitversion/execute@0
    displayName: 'GitVersion Execute'
    inputs:
      updateAssemblyInfo: true

  - bash: echo $Action$BuildVersion
    displayName: 'Set Build Version Number'
    env:
      Action: '##vso[build.updatebuildnumber]'
      BuildVersion: $(GitVersion.SemVer)

  - task: NodeTool@0
    displayName: 'Install Node.js 16.x'
    inputs:
      versionSpec: 16.x

  - task: Npm@1
    displayName: 'Install Angular CLI'
    inputs:
      command: 'custom'
      customCommand: 'install -g @angular/cli'

  - script: |
      npm ci
    displayName: 'Install npm packages'
    workingDirectory: '$(frontEndProjectPath)'

  - script: |
      ng build --aot --configuration production
    displayName: 'Build Angular production'
    workingDirectory: '$(frontEndProjectPath)'

  - task: UseDotNet@2
    displayName: 'Install .NET 6.x SDK'
    inputs:
      packageType: sdk
      version: 6.x

#  - task: NuGetToolInstaller@1
#    displayName: 'Install Nuget'

#  - task: NuGetCommand@2
#    displayName: 'Restore Nuget Packages'
#    inputs:
#      restoreSolution: '$(solution)'
#      feedsToUse: 'config'
#      nugetConfigPath: 'nuget.config'

  - task: DotNetCoreCLI@2
    displayName: 'Dotnet restore'
    inputs:
      command: 'restore'

  - task: DotNetCoreCLI@2
    displayName: 'Dotnet build $(buildConfiguration)'
    inputs:
      command: 'build'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  - bash: |
      sudo npm install -g azurite
      sudo mkdir azurite
      sudo azurite --silent --location azurite --debug azurite\debug.log &
    displayName: 'Install and Run Azurite'

  - task: PowerShell@2
    displayName: 'Run database container'
    inputs:
      targetType: 'inline'
      script: 'docker run -e ''SA_PASSWORD=x2yiJt!Fs'' -e ACCEPT_EULA=y --name mango-mssql-db --hostname mango-mssql-db -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latest'

  - task: PowerShell@2
    displayName: 'Wait for container'
    timeoutInMinutes: 5
    inputs:
      targetType: 'inline'
      script: .\scripts\wait_database.ps1

  - task: DotNetCoreCLI@2
    displayName: 'Run integration tests'
    inputs:
      command: 'test'
      projects: 'MangoAPI.IntegrationTests/MangoAPI.IntegrationTests.csproj'
      arguments: '--no-restore --collect:"XPlat Code Coverage" --settings build/coverage.runsettings'

  - task: DotNetCoreCLI@2
    displayName: 'Run dotnet Publish'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '$(backendProjectPath)'
      arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/$(BuildConfiguration) --no-build'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
