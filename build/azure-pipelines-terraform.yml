trigger: none

pr: none

variables:
  - group: TERRAFORM_DEV # keeps keyvault name only
  - name: 'TF_LOG'
    value: 'INFO'

stages:
  - stage: 'Terraform_Apply'
    displayName: 'Terraform Apply'
    jobs:
      - job: 'Terraform_Apply'
        displayName: 'Terraform Apply'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: TerraformInstaller@0
            displayName: 'Terraform Installer'
            inputs:
              terraformVersion: 'latest'

          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'AzureForStudents'
              KeyVaultName: '$(KeyVaultName)'
              SecretsFilter: "*"
              RunAsPreJob: false

          - bash: terraform fmt -check
            displayName: Terraform Format
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            continueOnError: true

          - bash: |
              terraform init \
                -backend-config="storage_account_name=$TF_STATE_BLOB_ACCOUNT_NAME" \
                -backend-config="container_name=$TF_STATE_BLOB_CONTAINER_NAME" \
                -backend-config="key=$TF_STATE_BLOB_FILE" \
                -backend-config="sas_token=$TF_STATE_BLOB_SAS_TOKEN"
            displayName: Terraform Init
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            env:
              TF_STATE_BLOB_ACCOUNT_NAME: $(kv-tf-state-blob-account)
              TF_STATE_BLOB_CONTAINER_NAME: $(kv-tf-state-blob-container)
              TF_STATE_BLOB_FILE: 'terraform.mango$(prefix).tfstate'
              TF_STATE_BLOB_SAS_TOKEN: $(kv-tf-state-sas-token)

          - bash: terraform plan -var "prefix=$(prefix)" -out $PLAN_FILE
            displayName: Terraform Plan
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            env:
              ARM_SUBSCRIPTION_ID: $(kv-arm-subscription-id)
              ARM_CLIENT_ID: $(kv-arm-client-id)
              ARM_CLIENT_SECRET: $(kv-arm-client-secret)
              ARM_TENANT_ID: $(kv-arm-tenant-id)
              PLAN_FILE: 'main-$(prefix).tfplan'

          - task: PowerShell@2
            displayName: Detect changes in plan
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              targetType: 'inline'
              script: |
                ./../scripts/checkTerraformChanges.ps1 -planPath $env:PLAN_FILE
            env:
              PLAN_FILE: 'main-$(prefix).tfplan'

          - bash: terraform apply -auto-approve $PLAN_FILE
            displayName: Terraform Apply
            condition: eq(variables.anyTfChanges, true)
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            env:
              ARM_SUBSCRIPTION_ID: $(kv-arm-subscription-id)
              ARM_CLIENT_ID: $(kv-arm-client-id)
              ARM_CLIENT_SECRET: $(kv-arm-client-secret)
              ARM_TENANT_ID: $(kv-arm-tenant-id)
              PLAN_FILE: 'main-$(prefix).tfplan'