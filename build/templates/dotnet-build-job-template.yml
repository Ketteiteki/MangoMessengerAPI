parameters:
  - name: buildConfiguration
    displayName: 'Build Configuration'
    type: string
    default: 'Release'
    values:
      - Release
      - Debug

  - name: integrationTestsProjectPath
    displayName: 'Integration Tests Project Path'
    type: string
    default: './MangoAPI.IntegrationTests/MangoAPI.IntegrationTests.csproj'

  - name: backendProjectPath
    displayName: 'Backend project path'
    type: string
    default: './MangoAPI.Presentation/MangoAPI.Presentation.csproj'

jobs:
  - job: 'Build_Test_Pack_Dotnet'
    displayName: 'Build Test and Drop Artifact .NET'
    steps:

      - task: UseDotNet@2
        displayName: 'Install .NET 6.x SDK'
        inputs:
          packageType: sdk
          version: 6.x

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet restore'
        inputs:
          command: 'restore'
          arguments: '--verbosity minimal'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet build $(buildConfiguration)'
        inputs:
          command: 'build'
          arguments: '--configuration $(buildConfiguration) --no-restore'

      - bash: |
          sudo npm install -g azurite
          sudo mkdir azurite
          sudo azurite --silent --location azurite --debug azurite\debug.log &
        displayName: 'Install and Run Azurite'

      - task: PowerShell@2
        displayName: 'Run database container'
        inputs:
          targetType: 'inline'
          script: 'docker run -e ''SA_PASSWORD=x2yiJt!Fs'' -e ACCEPT_EULA=y --name mango-mssql-db --hostname mango-mssql-db -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latest'

      - task: PowerShell@2
        displayName: 'Wait for container'
        timeoutInMinutes: 5
        inputs:
          targetType: 'inline'
          script: .\scripts\wait_database.ps1

      - task: DotNetCoreCLI@2
        displayName: 'Run integration tests'
        inputs:
          command: 'test'
          projects: '$(integrationTestsProjectPath)'
          arguments: '--no-restore --collect:"XPlat Code Coverage" --settings build/coverage.runsettings'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Publish'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '$(backendProjectPath)'
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration) --no-build'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'web-app'
          publishLocation: 'Container'
