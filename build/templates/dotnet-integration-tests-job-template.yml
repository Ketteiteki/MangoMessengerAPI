parameters:
  - name: buildConfiguration
    displayName: 'Build Configuration'
    type: string
    default: 'Release'
    values:
      - Release
      - Debug

  - name: integrationTestsProjectPath
    displayName: 'Integration Tests Project Path'
    type: string
    default: './MangoAPI.IntegrationTests/MangoAPI.IntegrationTests.csproj'
    
  - name: unitTestsProjectPath
    displayName: 'Unit Tests Project Path'
    type: string
    default: './MangoAPI.UnitTests/MangoAPI.UnitTests.csproj'

jobs:
  - job: 'Build_Test_Dotnet'
    displayName: 'Build Test .NET'
    steps:
      - checkout: self
        fetchDepth: 0
        
      - task: UseDotNet@2
        displayName: 'Install .NET 6.x SDK'
        inputs:
          packageType: sdk
          version: 6.x

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet restore'
        inputs:
          command: 'restore'
          projects: '${{ parameters.integrationTestsProjectPath }}'
          arguments: '--verbosity minimal'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet build ${{ parameters.buildConfiguration }}'
        inputs:
          command: 'build'
          projects: '${{ parameters.integrationTestsProjectPath }}'
          arguments: '--configuration ${{ parameters.buildConfiguration }} --no-restore'
          
      - task: DotNetCoreCLI@2
        displayName: 'Run unit tests'
        inputs:
          command: 'test'
          projects: '${{ parameters.unitTestsProjectPath }}'
#          arguments: '--configuration ${{ parameters.buildConfiguration }} --no-build'
      
#      - bash: |
#          dotnet test ${{ parameters.unitTestsProjectPath }} --configuration ${{ parameters.buildConfiguration }} --no-build
#        displayName: 'Run unit tests'
#        env:
#          CollectCoverage: true
#          CoverletOutputFormat: cobertura
#          ThresholdStat: total
#          ThresholdType: Line
#          CoverletOutput: UnitTestResults/
          

      - bash: |
          sudo npm install -g azurite
          sudo mkdir azurite
          sudo azurite --silent --location azurite --debug azurite\debug.log &
        displayName: 'Install and Run Azurite'

      - task: PowerShell@2
        displayName: 'Run database container'
        inputs:
          targetType: 'inline'
          script: 'docker run -e ''SA_PASSWORD=x2yiJt!Fs'' -e ACCEPT_EULA=y --name mango-mssql-db --hostname mango-mssql-db -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latest'

      - task: PowerShell@2
        displayName: 'Wait for container'
        timeoutInMinutes: 5
        inputs:
          targetType: 'inline'
          script: .\scripts\wait_database.ps1

      - task: DotNetCoreCLI@2
        displayName: 'Run integration tests'
        inputs:
          command: 'test'
          projects: '${{ parameters.integrationTestsProjectPath }}'
          arguments: '--no-restore --collect:"XPlat Code Coverage" --settings build/coverage.runsettings'

      - task: reportgenerator@5
        displayName: 'Generate Code Coverage Report'
        inputs:
          reports: '$(Agent.TempDirectory)/**/*cobertura.xml'
          targetdir: '$(codeCoverageReportDirPath)'
          reporttypes: 'HtmlInline_AzurePipelines;Cobertura;HTMLChart'
          assemblyfilters: '-xunit*;-System.*'

      - task: PublishTestResults@2
        inputs:
          testRunner: VSTest
          testResultsFiles: '$(Agent.TempDirectory)/**/*.trx'

      - task: PublishCodeCoverageResults@1
        inputs:
          summaryFileLocation: $(codeCoverageReportDirPath)/Cobertura.xml
          reportDirectory: $(codeCoverageReportDirPath)
          codecoverageTool: cobertura
