trigger:
  branches:
    include:
      - develop

pr:
  branches:
    include:
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: buildPlatform
    value: 'Any CPU'

stages:
  - stage: 'Build_Test_Pack'
    displayName: 'Build Test and Drop Artifacts'
    jobs:
      - template: templates/dotnet-build-job-template.yml
      - template: templates/dotnet-integration-tests-job-template.yml
      - template: templates/sonarcloud-job-template.yml
      - template: templates/mend-scan-job-template.yml

  - stage: "dev"
    displayName: "Deploy Mango Messenger to DEV Environment"
    dependsOn: Build_Test_Pack
    condition: succeeded('Build_Test_Pack')
    jobs:
      - deployment: Deploy_Mango_Web_API_to_Dev
        displayName: "Deploy Mango Messenger to DEV Environment"
        pool:
          vmImage: "ubuntu-latest"
        environment: dev
        variables:
          - group: DEPLOY_DEV_VARS
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "MangoRgServiceConnection"
                    appType: "webApp"
                    WebAppName: "$(WebAppName)"
                    packageForLinux: "$(Pipeline.Workspace)/drop/$(BuildConfiguration)/MangoAPI.Presentation.zip"
                    JSONFiles: "**/appsettings.json"
