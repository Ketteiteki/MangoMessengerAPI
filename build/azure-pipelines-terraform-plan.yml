trigger: none

pr: none

variables:
  - group: TERRAFORM_DEV

stages:
  - stage: 'Terraform_Plan'
    displayName: 'Terraform plan'
    jobs:
      - job: 'TerraformPlan'
        displayName: 'Terraform plan'
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          TF_STATE_BLOB_ACCOUNT_NAME: $(kv-tf-state-blob-account)
          TF_STATE_BLOB_CONTAINER_NAME: $(kv-tf-state-blob-container)
          TF_STATE_BLOB_FILE: $(kv-tf-state-blob-file)
          TF_STATE_BLOB_SAS_TOKEN: $(kv-tf-state-sas-token)
          ARM_SUBSCRIPTION_ID: $(kv-arm-subscription-id)
          ARM_CLIENT_ID: $(kv-arm-client-id)
          ARM_CLIENT_SECRET: $(kv-arm-client-secret)
          ARM_TENANT_ID: $(kv-arm-tenant-id)
        
        steps:
          - task: TerraformInstaller@0
            displayName: 'Terraform Installer'
            inputs:
              terraformVersion: 'latest'

          - bash: |
              terraform init \
                -backend-config="storage_account_name=$TF_STATE_BLOB_ACCOUNT_NAME" \
                -backend-config="container_name=$TF_STATE_BLOB_CONTAINER_NAME" \
                -backend-config="key=$TF_STATE_BLOB_FILE" \
                -backend-config="sas_token=$TF_STATE_BLOB_SAS_TOKEN"
            displayName: Terraform Init
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

          - bash: terraform plan -var "prefix=$(prefix)" -out "main-$(prefix).tfplan"
            displayName: Terraform Plan
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

          - bash: terraform apply -auto-approve "main-$(prefix).tfplan"
            displayName: Terraform Apply
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'