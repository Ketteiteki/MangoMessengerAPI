// <auto-generated />
using System;
using MangoAPI.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MangoAPI.DataAccess.Migrations
{
    [DbContext(typeof(MangoDbContext))]
    [Migration("20221014184459_DisplayNameColour")]
    partial class DisplayNameColour
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MangoAPI.Domain.Entities.ChatEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CommunityType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastMessageAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastMessageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMessageTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembersCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ChatEntity", "mango");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            CommunityType = 2,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1345),
                            Description = "WSB Public Group",
                            Image = "wsb_group_logo.png",
                            LastMessageAuthor = "Szymon Murawski",
                            LastMessageText = "Great! Good luck to all of you",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1354),
                            MembersCount = 5,
                            Title = "WSB",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1348)
                        },
                        new
                        {
                            Id = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            CommunityType = 2,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1357),
                            Description = "Extreme Code Main Public Group",
                            Image = "extreme_code_main.jpg",
                            LastMessageAuthor = "Amelit",
                            LastMessageText = "TypeScript The Best",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1359),
                            MembersCount = 4,
                            Title = "Extreme Code Main",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1358)
                        },
                        new
                        {
                            Id = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            CommunityType = 2,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1361),
                            Description = "Extreme Code Flood Public Group",
                            Image = "extremecode_rest_logo.jpg",
                            LastMessageAuthor = "Amelit",
                            LastMessageText = "Слава Партии!!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1364),
                            MembersCount = 4,
                            Title = "Extreme Code Flood",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1361)
                        },
                        new
                        {
                            Id = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            CommunityType = 2,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1368),
                            Description = "Extreme Code C++ Public Group",
                            Image = "extremecode_cpp_logo.jpg",
                            LastMessageAuthor = "Amelit",
                            LastMessageText = "Hello world!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1370),
                            MembersCount = 4,
                            Title = "Extreme Code C++",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1369)
                        },
                        new
                        {
                            Id = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            CommunityType = 2,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1371),
                            Description = "Extreme Code .NET Public Group",
                            Image = "extremecode_dotnet.png",
                            LastMessageAuthor = "Amelit",
                            LastMessageText = "Hello world!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1373),
                            MembersCount = 4,
                            Title = "Extreme Code .NET",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1372)
                        },
                        new
                        {
                            Id = new Guid("f5b7824f-e52b-4246-9984-06fc8e964f0c"),
                            CommunityType = 1,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1376),
                            Description = "Direct chat between Khachatur Khachatryan and razumovsky r",
                            LastMessageAuthor = "razumovsky r",
                            LastMessageText = "Hello world!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1378),
                            MembersCount = 2,
                            Title = "Khachatur Khachatryan / razumovsky r",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1377)
                        },
                        new
                        {
                            Id = new Guid("f8729a12-5746-443f-ad31-378d846fce30"),
                            CommunityType = 1,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1379),
                            Description = "Direct chat between Мусяка Колбасяка and razumovsky r",
                            LastMessageAuthor = "razumovsky r",
                            LastMessageText = "Hello world!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1381),
                            MembersCount = 2,
                            Title = "Мусяка Колбасяка / razumovsky r",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1380)
                        },
                        new
                        {
                            Id = new Guid("b119914a-6d95-4047-bf8a-db27deeb7dc9"),
                            CommunityType = 1,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1383),
                            Description = "Direct chat between Amelit and razumovsky r",
                            LastMessageAuthor = "razumovsky r",
                            LastMessageText = "Hello world!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1385),
                            MembersCount = 2,
                            Title = "Amelit / razumovsky r",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1384)
                        },
                        new
                        {
                            Id = new Guid("9f205dde-0ddc-401f-8fe9-6c794b661f5d"),
                            CommunityType = 1,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1386),
                            Description = "Direct chat between Khachatur Khachatryan and Мусяка Колбасяка",
                            LastMessageAuthor = "Khachatur Khachatryan",
                            LastMessageText = "Hello world!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1388),
                            MembersCount = 2,
                            Title = "Khachatur Khachatryan / Мусяка Колбасяка",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1387)
                        },
                        new
                        {
                            Id = new Guid("3fce8b2c-252d-4514-a1bb-fbdf73c47b78"),
                            CommunityType = 1,
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1389),
                            Description = "Direct chat between Petro Kolosov and Szymon Murawski",
                            LastMessageAuthor = "Petro Kolosov",
                            LastMessageText = "Hello world!",
                            LastMessageTime = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1391),
                            MembersCount = 2,
                            Title = "Petro Kolosov / Szymon Murawski",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(1390)
                        });
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.DiffieHellmanKeyExchangeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("KeyExchangeType")
                        .HasColumnType("int");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ReceiverPublicKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("SenderPublicKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DiffieHellmanKeyExchangeEntity", "mango");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.DiffieHellmanParameterEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("OpenSslDhParameter")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("DiffieHellmanParameterEntity", "mango");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.DocumentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DocumentEntity", "mango");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.MessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InReplayToAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InReplayToText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("MessageEntity", "mango");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c539d748-84d6-4e43-b0ba-abd520b00f21"),
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            Content = "Hello guys, how your diploma project goes?",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7771),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c")
                        },
                        new
                        {
                            Id = new Guid("7d3e86b4-d713-4793-9caa-a97e721f5711"),
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            Content = "Well, I'm doing UI/UX part of the project",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7775),
                            UserId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9")
                        },
                        new
                        {
                            Id = new Guid("9a1e91f2-a8ea-4104-b18f-eee401ce80bf"),
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            Content = "Hi teacher, I perform QA of the current version",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7804),
                            UserId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c")
                        },
                        new
                        {
                            Id = new Guid("26cbd6d5-46a7-4838-a20b-c0a8db202376"),
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            Content = "Greetings. I currently workout the back-end part",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7807),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4")
                        },
                        new
                        {
                            Id = new Guid("b92ef85c-d577-48b8-9a24-c8092f9e38a5"),
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            Content = "I work with backend too...",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7810),
                            UserId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7")
                        },
                        new
                        {
                            Id = new Guid("d68a2344-cae4-41d6-b6c3-5b6a164a2049"),
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            Content = "Great! Good luck to all of you",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7812),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c")
                        },
                        new
                        {
                            Id = new Guid("f9913b3f-5415-458a-b850-0ea6f9588eb9"),
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7815),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a")
                        },
                        new
                        {
                            Id = new Guid("15431b57-c8ea-4714-89b5-cd2864903bf5"),
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            Content = "F# The Best",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7819),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("17101720-567e-4020-bf24-8dc619dce844"),
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            Content = "C# The Best",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7821),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b")
                        },
                        new
                        {
                            Id = new Guid("09c3606a-6320-4c78-86df-45e637020e03"),
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            Content = "TypeScript The Best",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7825),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0")
                        },
                        new
                        {
                            Id = new Guid("c64c9a50-00c9-4292-b87c-b59b989e19d2"),
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            Content = "Слава Партии!!",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7832),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a")
                        },
                        new
                        {
                            Id = new Guid("eee92aed-cfc4-4343-b1b2-ce67473fd8d2"),
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            Content = "Слава Партии!!",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7834),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("719150a8-7a17-4c70-8c62-a601387343d0"),
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            Content = "Слава Партии!!",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7837),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b")
                        },
                        new
                        {
                            Id = new Guid("847ab76d-ef93-404f-8e96-29e52e444ebf"),
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            Content = "Слава Партии!!",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7840),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0")
                        },
                        new
                        {
                            Id = new Guid("a2603c47-40c7-4628-a7cb-acf625a7b0db"),
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7844),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a")
                        },
                        new
                        {
                            Id = new Guid("e0ea2a35-b1a7-4ab1-87f2-d59d3228c69a"),
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7846),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("ce50b5d0-400d-40f6-bcfb-fcb6be13064f"),
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7850),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b")
                        },
                        new
                        {
                            Id = new Guid("9b0c6dcf-d040-4832-8cad-eadca2b9e402"),
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7852),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0")
                        },
                        new
                        {
                            Id = new Guid("e9b56291-f5d7-407b-bd5e-7d6462edee32"),
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7858),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a")
                        },
                        new
                        {
                            Id = new Guid("47018b6b-45ec-4fc8-91a9-96ebc5de2db6"),
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7860),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("ef49bad7-c3c1-4b37-97bf-3b6c15688af1"),
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7863),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b")
                        },
                        new
                        {
                            Id = new Guid("2fddb2e2-125e-48f4-8b8d-875617a9ba46"),
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7865),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0")
                        },
                        new
                        {
                            Id = new Guid("6951313c-5704-47f4-b733-46ba81cd99b2"),
                            ChatId = new Guid("f5b7824f-e52b-4246-9984-06fc8e964f0c"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7869),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a")
                        },
                        new
                        {
                            Id = new Guid("a55c0355-7ba2-4245-ab13-5d4fd2e3d3d0"),
                            ChatId = new Guid("f5b7824f-e52b-4246-9984-06fc8e964f0c"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7872),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("f8cab700-4c2d-4440-8e0e-65f69ebe1792"),
                            ChatId = new Guid("f8729a12-5746-443f-ad31-378d846fce30"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7874),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b")
                        },
                        new
                        {
                            Id = new Guid("c1aa037e-e144-464b-8ad3-04af9b8070e8"),
                            ChatId = new Guid("f8729a12-5746-443f-ad31-378d846fce30"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7877),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("608dba59-60e9-4d49-816d-fe5ea5047763"),
                            ChatId = new Guid("b119914a-6d95-4047-bf8a-db27deeb7dc9"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7883),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0")
                        },
                        new
                        {
                            Id = new Guid("e17ae6e5-0f29-47d9-971b-ef42ee40b5fb"),
                            ChatId = new Guid("b119914a-6d95-4047-bf8a-db27deeb7dc9"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7885),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("ed49442f-dfe0-4403-90ab-cda1d24856ab"),
                            ChatId = new Guid("9f205dde-0ddc-401f-8fe9-6c794b661f5d"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7888),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a")
                        },
                        new
                        {
                            Id = new Guid("24607ed7-05b9-4bf9-a3d0-23d051691c6d"),
                            ChatId = new Guid("9f205dde-0ddc-401f-8fe9-6c794b661f5d"),
                            Content = "Hello World",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7890),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b")
                        },
                        new
                        {
                            Id = new Guid("c20a6816-cea4-4b4b-aeab-c0670c64ed7d"),
                            ChatId = new Guid("3fce8b2c-252d-4514-a1bb-fbdf73c47b78"),
                            Content = "Hi teacher",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 279, DateTimeKind.Utc).AddTicks(7892),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4")
                        });
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.PasswordRestoreRequestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PasswordRestoreRequestEntity", "mango");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.SessionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RefreshToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SessionEntity", "mango");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserChatEntity", b =>
                {
                    b.Property<Guid>("ChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("ChatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserChatEntity", "mango");

                    b.HasData(
                        new
                        {
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            IsArchived = false,
                            RoleId = 2
                        },
                        new
                        {
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            IsArchived = false,
                            RoleId = 4
                        },
                        new
                        {
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            UserId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            UserId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("b6ca4533-fc21-4f44-9747-687361e3031c"),
                            UserId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            IsArchived = false,
                            RoleId = 3
                        },
                        new
                        {
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            IsArchived = false,
                            RoleId = 2
                        },
                        new
                        {
                            ChatId = new Guid("0dae5a74-3528-4e85-95bb-2036bd80432c"),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0"),
                            IsArchived = false,
                            RoleId = 4
                        },
                        new
                        {
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            IsArchived = false,
                            RoleId = 4
                        },
                        new
                        {
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            IsArchived = false,
                            RoleId = 2
                        },
                        new
                        {
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("5e656ec2-205f-471c-b095-1c80b93b7655"),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0"),
                            IsArchived = false,
                            RoleId = 4
                        },
                        new
                        {
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            IsArchived = false,
                            RoleId = 3
                        },
                        new
                        {
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("cd358b94-c3b9-4022-923a-13f787f70055"),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            IsArchived = false,
                            RoleId = 4
                        },
                        new
                        {
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("6f66e318-1e94-44ae-9b33-fe001e070842"),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("f5b7824f-e52b-4246-9984-06fc8e964f0c"),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("f5b7824f-e52b-4246-9984-06fc8e964f0c"),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("f8729a12-5746-443f-ad31-378d846fce30"),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("f8729a12-5746-443f-ad31-378d846fce30"),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("b119914a-6d95-4047-bf8a-db27deeb7dc9"),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("b119914a-6d95-4047-bf8a-db27deeb7dc9"),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("9f205dde-0ddc-401f-8fe9-6c794b661f5d"),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("9f205dde-0ddc-401f-8fe9-6c794b661f5d"),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("3fce8b2c-252d-4514-a1bb-fbdf73c47b78"),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            IsArchived = false,
                            RoleId = 1
                        },
                        new
                        {
                            ChatId = new Guid("3fce8b2c-252d-4514-a1bb-fbdf73c47b78"),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            IsArchived = false,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserContactEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserContactEntity", "mango");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c33557a-b27f-4e86-9d9b-56d09438492e"),
                            ContactId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6375),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4")
                        },
                        new
                        {
                            Id = new Guid("0559e94d-ae1f-49cc-aa28-eaad5d0ca14b"),
                            ContactId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6381),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4")
                        },
                        new
                        {
                            Id = new Guid("4c3bc730-c01f-49df-b65e-eb24ec00ebbc"),
                            ContactId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6383),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4")
                        },
                        new
                        {
                            Id = new Guid("a0208ca3-8bd0-4616-b143-3ad148f254bf"),
                            ContactId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6403),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4")
                        },
                        new
                        {
                            Id = new Guid("4988e085-e062-46dd-a4fc-adb83176bced"),
                            ContactId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6406),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c")
                        },
                        new
                        {
                            Id = new Guid("55c593a8-7bed-4c07-a12d-f1156fbfcb9d"),
                            ContactId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6408),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c")
                        },
                        new
                        {
                            Id = new Guid("7ef7b95e-2d3a-4490-9a3e-c7c38dcf0209"),
                            ContactId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6410),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c")
                        },
                        new
                        {
                            Id = new Guid("a5897433-2e81-4bfb-aa2c-1f36f4743a38"),
                            ContactId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6413),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c")
                        },
                        new
                        {
                            Id = new Guid("dbc81151-22e7-4a06-8dab-3f38e1486c48"),
                            ContactId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6415),
                            UserId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9")
                        },
                        new
                        {
                            Id = new Guid("07bfc399-cf93-494e-bd4f-9d16e67f280e"),
                            ContactId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6417),
                            UserId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9")
                        },
                        new
                        {
                            Id = new Guid("10ee2847-cfab-4563-8664-f0b964bdba94"),
                            ContactId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6420),
                            UserId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9")
                        },
                        new
                        {
                            Id = new Guid("76d130c0-d863-4687-bb2d-e73921ce9a30"),
                            ContactId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6425),
                            UserId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9")
                        },
                        new
                        {
                            Id = new Guid("2763ecf8-360f-4403-8892-6c86de57bcd4"),
                            ContactId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6429),
                            UserId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7")
                        },
                        new
                        {
                            Id = new Guid("390dbda6-01f7-4454-9b57-a30f067c9818"),
                            ContactId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6431),
                            UserId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7")
                        },
                        new
                        {
                            Id = new Guid("bd0909cb-7348-42b6-9b54-2dc67f9a708f"),
                            ContactId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6434),
                            UserId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7")
                        },
                        new
                        {
                            Id = new Guid("439b4f3d-f524-4099-a5ca-3055c1f566dd"),
                            ContactId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6436),
                            UserId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7")
                        },
                        new
                        {
                            Id = new Guid("397cdb26-a63a-4d6c-a177-6e9e212697c8"),
                            ContactId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6438),
                            UserId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c")
                        },
                        new
                        {
                            Id = new Guid("a4d8918a-dad7-4fbe-844d-1ddb5b592faf"),
                            ContactId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6441),
                            UserId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c")
                        },
                        new
                        {
                            Id = new Guid("eddeea50-4a1c-4473-b8dc-452f6018b1cd"),
                            ContactId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6443),
                            UserId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c")
                        },
                        new
                        {
                            Id = new Guid("753a9bcb-8a67-4fee-80bb-1de0c41d94ee"),
                            ContactId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6448),
                            UserId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c")
                        },
                        new
                        {
                            Id = new Guid("ee14b964-59a7-4ba5-8316-937e35c320dd"),
                            ContactId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6451),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a")
                        },
                        new
                        {
                            Id = new Guid("300dc3ab-fb13-425e-aecd-ce853193bcfb"),
                            ContactId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6453),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("6963e212-e88f-4f74-89f9-2ea9cb0dda7d"),
                            ContactId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6456),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("6019014b-af9b-4783-be99-db9858ac7d36"),
                            ContactId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6458),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("ba16e9ab-7e2f-4f57-a8e8-7f8ded4808be"),
                            ContactId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6461),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("6077df24-e39f-4d6b-979a-c0bf6815c94b"),
                            ContactId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6463),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b")
                        },
                        new
                        {
                            Id = new Guid("2e239eeb-80eb-401b-b7e9-101fbeaa81e8"),
                            ContactId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6465),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b")
                        },
                        new
                        {
                            Id = new Guid("6336390a-e3f7-4872-8cd7-50f0f1dcf33d"),
                            ContactId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 280, DateTimeKind.Utc).AddTicks(6471),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0")
                        });
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayNameColour")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("EmailCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("UserEntity", "mango");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            AccessFailedCount = 0,
                            Bio = "13 y. o. | C# pozer, Hearts Of Iron IV noob",
                            ConcurrencyStamp = "350c2a57-8ed3-47d2-95fa-06220ee19bf0",
                            DisplayName = "Khachatur Khachatryan",
                            DisplayNameColour = 6,
                            Email = "xachulxx@gmail.com",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "khachatur_picture.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "XACHULXX@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDlcmFnM2oJfq9lBR/Ls+M6vOfJgWxQltaaPIsuRbe5cZnyNkcGXk9f32G82EgYywg==",
                            PhoneNumber = "374775554310",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "KHACHATUR228"
                        },
                        new
                        {
                            Id = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            AccessFailedCount = 0,
                            Bio = "11011 y.o Dotnet Developer from $\"{cityName}\"",
                            ConcurrencyStamp = "de230905-d0cd-493e-86ac-eae8f06e445b",
                            DisplayName = "razumovsky r",
                            DisplayNameColour = 9,
                            Email = "kolosovp95@gmail.com",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "razumovsky_picture.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "KOLOSOVP94@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHjZihTSL7XQ8DiZ84bqx80C16S1wyz26EJTDbgVyVs8AUJWYjxLJ2irLCA1afoRxw==",
                            PhoneNumber = "48743615532",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "razumovsky_r"
                        },
                        new
                        {
                            Id = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            AccessFailedCount = 0,
                            Bio = "Колбасятор.",
                            ConcurrencyStamp = "298f3132-8b85-4243-87ed-19df3c284503",
                            DisplayName = "Мусяка Колбасяка",
                            DisplayNameColour = 5,
                            Email = "kolbasator@gmail.com",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "musyaka_picture.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "KOLBASATOR@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEmRT04pVnmjzLw4rj+ThI83q6V/vJn/Ny00yCgkDtCpq65GmU9u00W2ktRESOVa7w==",
                            PhoneNumber = "77017506265",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "kolbasator"
                        },
                        new
                        {
                            Id = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0"),
                            AccessFailedCount = 0,
                            Bio = "Дипломат",
                            ConcurrencyStamp = "210f0e37-2e78-4207-b299-ece0d4febffa",
                            DisplayName = "Amelit",
                            DisplayNameColour = 4,
                            Email = "amelit@gmail.com",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "amelit_picture.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMELIT@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEG6f1dGJKteQ3F1v/Slw4vw3qJ0qxHzQuO85PJGHjJQQ+bhhxqqrjZb/J5bAc0hD6w==",
                            PhoneNumber = "12025550152",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "TheMoonlightSonata"
                        },
                        new
                        {
                            Id = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            AccessFailedCount = 0,
                            Bio = "Third year student of WSB at Poznan",
                            ConcurrencyStamp = "cf629fcc-2b07-4183-91ce-dd1d1efa1da0",
                            DisplayName = "Petro Kolosov",
                            DisplayNameColour = 1,
                            Email = "petro.kolosov@wp.pl",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "razumovsky_picture.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "PETRO.KOLOSOV@WP.PL",
                            PasswordHash = "AQAAAAEAACcQAAAAEGjLdDfT4F+qoXUZlBr6Xjag/j07bFatcVag66zoFjOxhTj9OauKfyHEY4eWkDI6hQ==",
                            PhoneNumber = "48743615532",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "petro.kolosov"
                        },
                        new
                        {
                            Id = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            AccessFailedCount = 0,
                            Bio = "Teacher of Computer Science at WSB Poznan",
                            ConcurrencyStamp = "d34c05a2-24b1-4e39-8040-22f689e49f8b",
                            DisplayName = "Szymon Murawski",
                            DisplayNameColour = 7,
                            Email = "szymon.murawski@wp.pl",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "szymon_picture.png",
                            LockoutEnabled = false,
                            NormalizedEmail = "SZYMON.MURAWSKI@WP.PL",
                            PasswordHash = "AQAAAAEAACcQAAAAEEplwCXHHWspkmNU/RmFwxHm9M2dMNZhi307Y9JopchbtFFIfyaZKta4EE2vll2srQ==",
                            PhoneNumber = "48743615532",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "szymon.murawski"
                        },
                        new
                        {
                            Id = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            AccessFailedCount = 0,
                            Bio = "Third year student of WSB at Poznan",
                            ConcurrencyStamp = "52c2d9be-3868-4e43-a881-dea9a63845db",
                            DisplayName = "Illia Zubachov",
                            DisplayNameColour = 4,
                            Email = "illia.zubachov@wp.pl",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "illia_picture.png",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILLIA.ZUBACHOW@WP.PL",
                            PasswordHash = "AQAAAAEAACcQAAAAEGMCbTFUF+ZEQDtPifFDv2GU7pzD1aN5D2lMGBWTG1w1beakRQYzPOOZ4c+NNLBCUg==",
                            PhoneNumber = "48352643123",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "illia.zubachov"
                        },
                        new
                        {
                            Id = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c"),
                            AccessFailedCount = 0,
                            Bio = "Third year student of WSB at Poznan",
                            ConcurrencyStamp = "b7b92c7c-47c0-468c-9ffa-a04676d2527e",
                            DisplayName = "Arslanbek Temirbekov",
                            DisplayNameColour = 2,
                            Email = "arslanbek.temirbekov@wp.pl",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "arslan_picture.png",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARSLANBEK.TEMIRBEKOV@WP.PL",
                            PasswordHash = "AQAAAAEAACcQAAAAENuZIIsgIbN1ElfqBzWijrBgCjdGMsmVpq9ydmrhAjO6JGyVlNiuzjBKz/FIuQTwQg==",
                            PhoneNumber = "48278187781",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "arslanbek.temirbekov"
                        },
                        new
                        {
                            Id = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7"),
                            AccessFailedCount = 0,
                            Bio = "Third year student of WSB at Poznan",
                            ConcurrencyStamp = "2b8502dc-6de9-4a94-946e-4b87bf6c4499",
                            DisplayName = "Serhii Holishevskii",
                            DisplayNameColour = 6,
                            Email = "serhii.holishevskii@wp.pl",
                            EmailCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailConfirmed = true,
                            Image = "serhii_picture.png",
                            LockoutEnabled = false,
                            NormalizedEmail = "SERHII.HOLISHEVSKII@WP.PL",
                            PasswordHash = "AQAAAAEAACcQAAAAEAO1WR2II6DRo6eJ/FleyZnfjwzsHINWNK92/zyEpsUy6DzYt4ZnYtD/vzEE5W9RlA==",
                            PhoneNumber = "48175481653",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "serhii.holishevskii"
                        });
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserInformationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInformationEntity", "mango");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72a94da8-36fd-4532-a258-5b92003def46"),
                            Address = "Poznan, Poland",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1021),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1027),
                            Facebook = "petro.kolosov",
                            Instagram = "petro.kolosov",
                            LinkedIn = "petro.kolosov",
                            Twitter = "petro.kolosov",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1026),
                            UserId = new Guid("2cd4b9a0-f70d-476d-a3cc-908da43f93c4"),
                            Website = "petro.kolosov.com"
                        },
                        new
                        {
                            Id = new Guid("0789f806-a819-4841-87a2-34012f723ecb"),
                            Address = "Poznan, Poland",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1034),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1035),
                            Facebook = "illia.zubachov",
                            Instagram = "illia.zubachov",
                            LinkedIn = "illia.zubachov",
                            Twitter = "illia.zubachov",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1034),
                            UserId = new Guid("72a7a013-8bc4-4ae6-89cb-d9f19e0c9cf9"),
                            Website = "illia.zubachov.com"
                        },
                        new
                        {
                            Id = new Guid("39222e7f-4ba5-41ec-901b-d85a33b5c7f0"),
                            Address = "Poznan, Poland",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1040),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1041),
                            Facebook = "serhii.holishevskii",
                            Instagram = "serhii.holishevskii",
                            LinkedIn = "serhii.holishevskii",
                            Twitter = "serhii.holishevskii",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1040),
                            UserId = new Guid("d1ae1de1-1aa8-4650-937c-4ed882038ad7"),
                            Website = "serhii.holishevskii.com"
                        },
                        new
                        {
                            Id = new Guid("e44c5504-9f0e-4cd8-af69-a69e120dbd1a"),
                            Address = "Poznan, Poland",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1063),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1064),
                            Facebook = "arslan.temirbekov",
                            Instagram = "arslan.temirbekov",
                            LinkedIn = "arslan.temirbekov",
                            Twitter = "arslan.temirbekov",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1064),
                            UserId = new Guid("56d6294f-7b80-4a78-856a-92b141de2d1c"),
                            Website = "arslan.temirbekov.com"
                        },
                        new
                        {
                            Id = new Guid("53ddef71-0784-43fe-abd5-7c70f92d6af5"),
                            Address = "Poznan, Poland",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1096),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1097),
                            Facebook = "szymon.murawski",
                            Instagram = "szymon.murawski",
                            LinkedIn = "szymon.murawski",
                            Twitter = "szymon.murawski",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1097),
                            UserId = new Guid("5e7274ad-3132-4ad7-be36-38778a8f7b1c"),
                            Website = "szymon.murawski.com"
                        },
                        new
                        {
                            Id = new Guid("c75877d3-167f-4b0b-9b8c-40f99623fdef"),
                            Address = "Moscow, Russia",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1103),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1104),
                            Instagram = "khachapur.mudrenych",
                            LinkedIn = "khachapur.mudrenych",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1103),
                            UserId = new Guid("e77cf2cb-3f3a-4f0b-ac5a-90a3263d075a"),
                            Website = "khachapur.com"
                        },
                        new
                        {
                            Id = new Guid("665550ab-5c8e-482b-b5ba-8a2c78c7153e"),
                            Address = "Odessa, Ukraine",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1108),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1109),
                            Facebook = "razumovsky_r",
                            Instagram = "razumovsky_r",
                            LinkedIn = "razumovsky_r",
                            Twitter = "razumovsky_r",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1109),
                            UserId = new Guid("fd3c67c5-c6ff-4a5d-a166-98ece1b7752b"),
                            Website = "razumovsky.com"
                        },
                        new
                        {
                            Id = new Guid("70f54505-98e4-41ca-8bd1-c1055587c7d2"),
                            Address = "Saint-Petersburg, Russia",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1113),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1115),
                            Facebook = "kolbasator",
                            ProfilePicture = "profile.png",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1114),
                            UserId = new Guid("5b515247-f6f5-47e1-ad06-95f317a0599b"),
                            Website = "kolbasator.com"
                        },
                        new
                        {
                            Id = new Guid("d40a1766-2739-4b06-a82d-591152208890"),
                            Address = "Moscow, Russia",
                            BirthDay = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1118),
                            CreatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1120),
                            Facebook = "TheMoonlightSonata",
                            Instagram = "TheMoonlightSonata",
                            Twitter = "TheMoonlightSonata",
                            UpdatedAt = new DateTime(2022, 10, 14, 18, 44, 58, 340, DateTimeKind.Utc).AddTicks(1119),
                            UserId = new Guid("d942706b-e4e2-48f9-bbdc-b022816471f0")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.DocumentEntity", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", "User")
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.MessageEntity", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.ChatEntity", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.PasswordRestoreRequestEntity", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", "UserEntity")
                        .WithMany("PasswordRestoreRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.SessionEntity", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", "UserEntity")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserChatEntity", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.ChatEntity", "Chat")
                        .WithMany("ChatUsers")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserContactEntity", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserInformationEntity", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", "User")
                        .WithOne("UserInformation")
                        .HasForeignKey("MangoAPI.Domain.Entities.UserInformationEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MangoAPI.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.ChatEntity", b =>
                {
                    b.Navigation("ChatUsers");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("MangoAPI.Domain.Entities.UserEntity", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Documents");

                    b.Navigation("Messages");

                    b.Navigation("PasswordRestoreRequests");

                    b.Navigation("Sessions");

                    b.Navigation("UserChats");

                    b.Navigation("UserInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
